{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\froman\fprq2\fcharset0 Calibri;}{\f1\froman\fprq2\fcharset0 Courier New;}{\f2\fnil\fcharset1 Cambria Math;}{\f3\froman\fprq2 Calibri;}{\f4\fnil\fcharset0 Calibri;}{\f5\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mmathFont2\mwrapIndent1440 }\viewkind4\uc1 
\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b\f0\fs28\lang9 Explain the fundamental data types in Dart (int, double, String, List, Map, etc.) and their uses.\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\lang16393\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  1.\tab\b\fs28 Int: it represents the numbers (positive, negative, zero)\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: - it\rquote s used for counting, indexing, and other integer-based values\b0\fs24\par
\b\fs28 Ex: - int age = 30;\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  2.\tab\b\fs28 Double: it represents the number\rquote s with decimal values.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: - it\rquote s used for \tab prices values like price height and percentage etc\'85\b0\fs24\par
\b\fs28 Ex: - double price = 19.99;\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  3.\tab\b\fs28 String: - it represents a sequence of character.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: it used for names, words messages or any word text data. \b0\fs24\par
\b\fs28 Ex: String name = "ABC XYZ ";\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  4.\tab\b\fs28 List: -\b0\fs24  \b\fs28 A List is an ordered collection of objects, similar to an array. Elements are accessed by a zero-based index\b0\fs24 .\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: - it\rquote s used for storing multiple items in sequence.\b0\fs24\par
\b\fs28 Example: \f1 List<String> fruits = ["apple", "banana", "orange"];\b0\f0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  5.\tab\b\fs28 Map: - A Map is a collection of key-value pairs, where each key must be unique.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: - it\rquote s used for when data needs to be stored and retrieved by a key.\b0\fs24\par
\b\fs28 Example: - Map<String, int> scores = \{"Alice": 95, "Bob": 88\};\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  6.\tab\b\fs28 Set: - its removed duplicates values.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Use: - when you want only distinct elements.\b0\fs24\par
\b\fs28 Example: - var numbers = \{1, 2, 3, 3, 4\}; \b0\fs24\par
\b\fs28  // Set automatically removes duplicate 3 \f2\u8594?\f0\lang16393  \{1, 2, 3, 4\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  7.\tab\b\fs28 Boolean: - it represents only two vales \b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 True or false\b0\fs24\par
\b\fs28 Use: - conditions, comparisons\b0\fs24 ,\b\fs28  and logical operators\b0\fs24\par
\b\fs28 Example:- bool is Logged IN = true;  // stores a true/false value\b0\fs24\par
\b\fs28\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  \b\fs28 Describe control structures in Dart with examples of if, else, for, while, and switch.\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  1.\tab\b\fs28 If statements: - the if statements are used to execute a block of code only if the condition evaluates to true.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Ex:\b0\fs24\par
\b\fs28 Void main ()\b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28  Int age = 20;\b0\fs24\par
\b\fs28  If (age >=18)\b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28 Print (\ldblquote Eligible for vote\rdblquote );\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\}\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  2.\tab\b\fs28 Is-else: - the is else statement allows you to execute one block of code if the conditions are true and another block if condition is false.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Ex:\b0\fs24\par
\b\fs28 Void main ()\b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28   Int marks > 35;\b0\fs24\par
\b\fs28   If (marks > 40)\b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28 Print(\ldblquote pass\rdblquote );\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28 Else\b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28 Print (\ldblquote fail\rdblquote );\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  3.\tab\b\fs28 For Loop: - for loop is control structure that repeats code a fixed number of times \b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Ex: -\b0\fs24\par
\b\fs28  void main () \b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28   for (int I = 1; I <= 5; I++) \b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28     print ("Count: $I");\b0\fs24\par
\b\fs28   \}\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  4.\tab\b\fs28 While: - the while loop keeps executing a block of code as long as conditions is true\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 This is only an entry-controlled loop\b0\fs24\par
\b\fs28 Ex:\b0\fs24\par
\b\fs28 void main () \b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28   int I = 1;\b0\fs24\par
\b\fs28   while (I <= 5) \b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28     print ("Number: $I");\b0\fs24\par
\b\fs28     I++;\b0\fs24\par
\b\fs28   \}\b0\fs24\par
\b\fs28\}\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par
\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  5.\tab\b\fs28 Switch \f3\endash\f0  case: - A switch case statement allows execution of one block of code from multiple choice based on the value of an expression \b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 EX: -\b0\fs24\par
\b\fs28 void main ()\b0\fs24\par
\b\fs28  \{\b0\fs24\par
\b\fs28   String grade = "B";\b0\fs24\par
\b\fs28   switch (grade)\b0\fs24\par
\b\fs28  \{\b0\fs24\par
\b\fs28     case "A":\b0\fs24\par
\b\fs28       print("Excellent");\b0\fs24\par
\b\fs28       break;\b0\fs24\par
\b\fs28     case "B":\b0\fs24\par
\b\fs28       print("Good");\b0\fs24\par
\b\fs28       break;\b0\fs24\par
\b\fs28     case "C":\b0\fs24\par
\b\fs28       print("Average");\b0\fs24\par
\b\fs28       break;\b0\fs24\par
\b\fs28     default:\b0\fs24\par
\b\fs28       print ("Invalid grade");\b0\fs24\par
\b\fs28   \}\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  6.\tab\b\fs28 Do-while:\b0  - \b This is an\b0  \b exit-controlled loop\b0  \b (condition checked later).\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 EX:\b0  -\fs24\par
\b\fs28 void main ()\b0\fs24\par
\b\fs28  \{\b0\fs24\par
\b\fs28   int I = 1;\b0\fs24\par
\b\fs28   do \{\b0\fs24\par
\b\fs28     print ("Value: $I");\b0\fs24\par
\b\fs28     if++;\b0\fs24\par
\b\fs28   \} \b0\fs24\par
\b\fs28 while (I <= 5);\b0\fs24\par
\b\fs28\}\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  \b\fs28 Explain object-oriented programming concepts in Dart, such as classes, inheritance, polymorphism, and interfaces.\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  1.\tab\b\fs28 Class: group of data members & member functions Like person can be class having data members height and weight and member functions as get details () and put details () to manipulate on details\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Ex:\b0\fs24\par
\b\fs28  class Mobile \b0\fs24\par
\b\fs28\{\b0\fs24\par
\b\fs28   String brand;\b0\fs24\par
\b\fs28   Mobile (this. Brand);\b0\fs24\par
\b\fs28\par
  void call () => print ("$brand is making a call");\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par
void main () \{\b0\fs24\par
\b\fs28   Mobile m = Mobile("iPhone");\b0\fs24\par
\b\fs28   m.call (); \b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  2.\tab\b\fs28 Inheritance: - When One Object Acquire All the Properties and Behaviour of Parent class That is called an Inheritance.\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28 Ex:\b0\fs24\par
\b\fs28 class Mobile \{\b0\fs24\par
\b\fs28   void call () => print ("Calling...");\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par
class Smartphone extends Mobile \{\b0\fs24\par
\b\fs28   void browse () => print ("Browsing Internet");\b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par
void main () \{\b0\fs24\par
\b\fs28   Smartphone s = Smartphone ();\b0\fs24\par
\b\fs28   s. call (); \b0\fs24\par
\b\fs28   s. browse (); \b0\fs24\par
\b\fs28\}\b0\fs24\par
\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  3.\tab\b\fs28 Polymorphism: - many ways to perform anything\b0\fs24\par

\pard\widctlpar\fi-360\li1800\sa160\sl252\slmult1  i)\tab\b\fs28 Method overloading: dart not support overloading\b0\fs24\par
 ii)\tab\b\fs28 Method overriding: When we declare the same method in the subclass, which is previously defined in the superclass is known as the method overriding. The subclass can define the same method by providing its own implementation, which is already exists in the superclass. The method in the superclass is called method overridden, and method in the subclass is called method overriding.\b0\fs24\par

\pard\widctlpar\li1080\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  4.\tab\b\fs28 Interface: An interface defines the syntax that any entity must adhere to. Dart does not have any separate syntax to define interfaces. An Interface defines the same as the class where any set of methods can be accessed by an object. The Class declaration can interface itself\b0\fs24\par

\pard\hyphpar0\widctlpar\sa160\sl252\slmult1\b\fs28\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\widctlpar\fi-360\li1440\sa160\sl252\slmult1 Describe asynchronous programming in Dart, including Future, async, await, and Stream\b0\fs24 .\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1  1.\tab\b\fs28 Async: It simply allows us to write promises-based code as if it was synchronous and it checks that we are not breaking the execution thread. It operates asynchronously via the event-loop. Async functions will always return a value. It makes sure that a promise is returned and if it is not returned then JavaScript automatically wraps it in a promise which is resolved with its value\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  2.\tab\b\fs28 Await: Await function is used to wait for the promise. It could be used within the async block only. It makes the code wait until the promise returns a result. It only makes the async block wait\b0\fs24\par

\pard\widctlpar\li720\sa160\sl252\slmult1\b\fs28\par
\par

\pard\widctlpar\fi-360\li1440\sa160\sl252\slmult1\b0\fs24  3.\tab\b\fs28 Stream: - A \f1 Stream\f0  represents a sequence of asynchronous data\b0  \b events\b0 .\b  Unlike a \f1 Future\f0  (which gives one value), a \f1 Stream\f0  can deliver multiple values over time. You can\b0  \b listen to a stream and react whenever a new value comes. Streams are useful for real-time data (sensors, chat messages, stock prices, location tracking).\b0\fs24\par

\pard\sa200\sl276\slmult1\qj               4.   \b\fs28 Future:\b0\fs24  \b\fs28 A \f1 Future\f0  represents a result that will be available in the\b0  \b future\b0 .\b  It is\b0  \b single-shot: it completes once\b0 .\f4\fs22\lang9\par
}
 